import { PaginationQueryDto } from './../../../shared/dto/pagination.dto';
import { CompanyPaymentTypeEnum, CompanyTypesEnum, StatusEnum } from '@prisma/client';
import { ActivityDto } from './activity.dto';
import { AddressDto } from './address.dto';
import { LicenseDto } from './license.dto';
import { WorkspaceDto } from './workspace.dto';
export declare class CreateCompanyDto {
    cnpj: string;
    name: string;
    fantasy: string;
    status: StatusEnum;
    type: CompanyTypesEnum;
    isConsulting: boolean;
    isClinic?: boolean;
    license?: LicenseDto;
    address?: AddressDto;
    readonly workspace: WorkspaceDto[];
    readonly primary_activity: ActivityDto[];
    readonly secondary_activity: ActivityDto[];
    size: string;
    phone: string;
    legal_nature: string;
    cadastral_situation: string;
    activity_start_date: string;
    cadastral_situation_date: string;
    legal_nature_code: string;
    cadastral_situation_description: string;
    operationTime?: string;
    description?: string;
    responsibleName?: string;
    email?: string;
    numAsos?: number;
    blockResignationExam?: boolean;
    esocialStart?: Date;
    responsibleNit?: string;
    responsibleCpf?: string;
    initials?: string;
    unit?: string;
    stateRegistration?: string;
    obs?: string;
    paymentDay?: number;
    isTaxNote?: boolean;
    observationBank?: string;
    paymentType?: CompanyPaymentTypeEnum;
    doctorResponsibleId?: number;
    tecResponsibleId?: number;
    esocialSend?: boolean;
}
export declare class FindCompaniesDto extends PaginationQueryDto {
    search?: string;
    fantasy?: string;
    userId?: number;
    groupId?: number;
    isClinic?: boolean;
    isGroup?: boolean;
    findAll?: boolean;
    clinicsCompanyId?: string;
    isConsulting?: boolean;
    isPeriodic?: boolean;
    isChange?: boolean;
    isAdmission?: boolean;
    isReturn?: boolean;
    isDismissal?: boolean;
    selectReport?: boolean;
    type?: CompanyTypesEnum[];
    companiesIds?: string[];
    clinicExamsIds?: number[];
}
