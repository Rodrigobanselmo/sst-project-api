import { ProfessionalResponsibleEntity } from './../../users/entities/professional-responsible.entity';
import { RiskFactorsEntity } from './../../sst/entities/risk.entity';
import { ExamToClinicEntity } from '../../sst/entities/examToClinic';
import { RiskFactorGroupDataEntity } from '../../sst/entities/riskGroupData.entity';
import { ProfessionalEntity } from './../../users/entities/professional.entity';
import { Company, CompanyPaymentTypeEnum, CompanyTypesEnum } from '.prisma/client';
import { ProfessionalCouncil, StatusEnum } from '@prisma/client';
import { AddressCompanyEntity } from './address-company.entity';
import { EmployeeEntity } from './employee.entity';
import { LicenseEntity } from './license.entity';
import { WorkspaceEntity } from './workspace.entity';
import { EnvironmentEntity } from './environment.entity';
import { ActivityEntity } from './activity.entity';
import { CharacterizationEntity } from './characterization.entity';
import { ContractEntity } from './contract.entity';
import { ContactEntity } from './contact.entity';
import { CompanyStepEnum } from '../../../shared/constants/enum/stepCompany.enum';
import { DocumentCoverEntity } from './document-cover.entity';
import { CompanyClinicsEntity } from './company-clinics.entity';
import { CompanyReportEntity } from './report.entity';
import { CompanyGroupEntity } from './company-group.entity';
import { CompanyCertEntity } from '../../../modules/esocial/entities/companyCert.entity';
import { HierarchyEntity } from './hierarchy.entity';
import { HomoGroupEntity } from './homoGroup.entity';
export declare class CompanyEntity implements Company {
    id: string;
    cnpj: string;
    name: string;
    fantasy: string;
    status: StatusEnum;
    type: CompanyTypesEnum;
    isConsulting: boolean;
    created_at: Date;
    updated_at: Date;
    licenseId: number;
    groupId: number;
    parentCompanyId: string;
    license?: LicenseEntity;
    address?: AddressCompanyEntity;
    workspace?: WorkspaceEntity[];
    employees?: EmployeeEntity[];
    deleted_at: Date | null;
    primary_activity?: ActivityEntity[];
    secondary_activity?: ActivityEntity[];
    environments?: EnvironmentEntity[];
    characterization?: CharacterizationEntity[];
    professionals?: ProfessionalEntity[];
    riskFactorGroupData?: RiskFactorGroupDataEntity[];
    email: string;
    logoUrl: string;
    responsibleName: string;
    phone: string;
    operationTime: string;
    activityStartDate: Date;
    receivingServiceContracts?: ContractEntity[];
    applyingServiceContracts?: ContractEntity[];
    responsibleNit: string;
    responsibleCpf: string;
    initials: string;
    description: string;
    unit: string;
    numAsos: number;
    blockResignationExam: boolean;
    doctorResponsibleId: number;
    tecResponsibleId: number;
    contacts: ContactEntity[];
    covers: DocumentCoverEntity[];
    isClinic: boolean;
    employeeCount?: number;
    riskGroupCount?: number;
    homogenousGroupCount?: number;
    hierarchyCount?: number;
    professionalCount?: number;
    examCount?: number;
    usersCount?: number;
    step?: CompanyStepEnum;
    steps?: CompanyStepEnum[];
    paymentType: CompanyPaymentTypeEnum;
    paymentDay: number;
    isTaxNote: boolean;
    observationBank: string;
    companiesToClinicAvailable: CompanyClinicsEntity;
    clinicsAvailable: CompanyClinicsEntity;
    clinicExams: ExamToClinicEntity[];
    report: CompanyReportEntity;
    riskDegree?: number;
    isGroup: boolean;
    esocialSend: boolean;
    companyGroupId: number;
    esocialStart: Date;
    esocialLastTransmission: Date;
    group?: Partial<CompanyGroupEntity>;
    cert?: CompanyCertEntity;
    riskFactors?: RiskFactorsEntity[];
    hierarchy?: HierarchyEntity[];
    homogeneousGroup?: HomoGroupEntity[];
    doctorResponsible?: Partial<ProfessionalEntity>;
    tecResponsible?: Partial<ProfessionalEntity>;
    professionalsResponsibles?: Partial<ProfessionalResponsibleEntity>[];
    ambResponsible?: Partial<ProfessionalEntity & ProfessionalCouncil>;
    constructor(partial: Partial<CompanyEntity>);
    mission: string;
    vision: string;
    values: string;
    activity_start_date: string;
    cadastral_situation_date: string;
    legal_nature_code: string;
    size: string;
    legal_nature: string;
    cadastral_situation: string;
    cadastral_situation_description: string;
    coordinatorName: string;
    stateRegistration: string;
    shortName: string;
    obs: string;
    private getCompanyStep;
    private getClinicStep;
}
